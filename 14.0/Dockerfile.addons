# This image is designed to be used with Cetmix Tower <https://cetmix.com/tower>
# However it can be used for standalone deployments too.
# Parts of both Odoo and OCA Docker files are being used. 
#
# This installs extra addons in the image built using Dockerfile.odoo
FROM tower-odoo-core:14.0
MAINTAINER Cetmix OU <https://cetmix.com>
# This token will be used to clone private GitHub repos
ARG GITHUB_TOKEN=<token>

USER root

# Clone extra addons
# This arg is used for cache invalidation so every layer below will be rebuilt
ARG EXTRA_ADDONS_RELEASE=put_any_value_here

# Copy addons list file
COPY ./addons.yml /tmp/getaddons

# Git settings used by GitAggregator
ENV GIT_USERNAME="Doge"
ENV GIT_EMAIL="doge@meme.example.com"

# Run git-aggregator
RUN git config --global user.email ${GIT_EMAIL} && git config --global user.name ${GIT_USERNAME} && \
    cd /tmp/getaddons && gitaggregate -c  /tmp/getaddons/addons.yml --expand-env

# Move all addons to their final destination
ENV ADDONS_DIR=/opt/extra-addons
RUN mkdir $ADDONS_DIR \
    && chown odoo $ADDONS_DIR \
    && cd /tmp/getaddons && find . -mindepth 2 -maxdepth 2 -type d -not \( -name '.*' -o -name 'setup' \) -exec mv -f {} $ADDONS_DIR \; \
    && ls -lah $ADDONS_DIR && rm -rf /tmp/getaddons

# Install external dependencies
RUN deps=$(manifestoo -d $ADDONS_DIR list-external-dependencies deb --transitive --ignore-missing) && \
    if [ -n "$deps" ]; then \
        apt-get update -qq && \
        DEBIAN_FRONTEND=noninteractive apt-get install -qq --no-install-recommends ${deps}; \
    fi

# Create hatch config file
RUN printf "[build-system]\nrequires = ['hatchling', 'hatch-odoo']\nbuild-backend = 'hatchling.build'\n\n[project]\nname = 'extra-addons'\nversion = '1.0'\ndynamic = ['dependencies']\n\n[tool.hatch.metadata.hooks.odoo-addons-dependencies]\n\n[tool.hatch.build.hooks.odoo-addons-dirs]\n\n[tool.hatch-odoo]\nodoo_version_override = '14.0'\ndependencies = ['click-odoo-contrib']\naddons_dirs = ['.']\n" > $ADDONS_DIR/pyproject.toml

# This PEP 503 index uses odoo addons from OCA and redirects the rest to PyPI,
# in effect hiding all non-OCA Odoo addons that are on PyPI.
ENV PIP_INDEX_URL=https://wheelhouse.odoo-community.org/oca-simple-and-pypi

# Install extra addons
RUN cd $ADDONS_DIR && pip install -e .

# Set DB manager password
ARG DB_MANAGER_PASSWORD=suchMuchPassword
RUN grep -q '^admin_passwd =' my.cfg && sed -i "s/^admin_passwd = .*/admin_passwd = ${DB_MANAGER_PASSWORD}/" my.cfg || echo "admin_passwd = ${DB_MANAGER_PASSWORD}" >> $ODOO_RC

# Set default user when running the container
USER odoo