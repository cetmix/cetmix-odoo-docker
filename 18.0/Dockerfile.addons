# This image is designed to be used with Cetmix Tower <https://cetmix.com/tower>
# However it can be used for standalone deployments too.
# Parts of both Odoo and OCA Docker files are being used. 
#
# This installs extra addons in the image built using Dockerfile.odoo
FROM tower-odoo-core:18.0
MAINTAINER Cetmix OU <https://cetmix.com>
# This token will be used to clone private GitHub repos
ARG GITHUB_TOKEN=<token>
ARG TMP_ADDONS_DIR=/tmp/getaddons

USER root

# Clone extra addons
# This arg is used for cache invalidation so every layer below will be rebuilt
ARG EXTRA_ADDONS_RELEASE=put_any_value_here

# Copy addons list file
COPY ./addons.yml $TMP_ADDONS_DIR

# Git settings used by GitAggregator
ENV GIT_USERNAME="Doge"
ENV GIT_EMAIL="doge@meme.example.com"

# Run git-aggregator
RUN git config --global user.email ${GIT_EMAIL} && git config --global user.name ${GIT_USERNAME} && \
    cd $TMP_ADDONS_DIR && gitaggregate -c  $TMP_ADDONS_DIR/addons.yml --expand-env

# Prepare the destination directory
ENV ADDONS_DIR=/opt/extra-addons
RUN mkdir $ADDONS_DIR \
    && chown odoo $ADDONS_DIR

# Move all addons to their final destination
RUN bash -c ' \
    # Function to check each directory \
    check_directory() { \
        local dir="$1"; \
        if [[ -f "$dir/__manifest__.py" ]]; then \
            mv "$dir" "$ADDONS_DIR"; \
        else \
            for subdir in "$dir"/*/; do \
                if [[ -d "$subdir" ]]; then \
                    check_directory "$subdir"; \
                fi; \
            done; \
        fi; \
    }; \
    # First, check if __manifest__.py exists in the top-level directory \
    if [[ -f "$TOP_LEVEL_DIR/__manifest__.py" ]]; then \
        mv "$TMP_ADDONS_DIR" "$ADDONS_DIR"; \
    else \
        # If not found in the root, start checking subdirectories \
        check_directory "$TMP_ADDONS_DIR"; \
    fi; \
    '

# List addons
RUN  ls -lah $ADDONS_DIR && rm -rf $TMP_ADDONS_DIR

# Install external dependencies
RUN deps=$(manifestoo -d $ADDONS_DIR list-external-dependencies deb --transitive --ignore-missing) && \
    if [ -n "$deps" ]; then \
        apt-get update -qq && \
        DEBIAN_FRONTEND=noninteractive apt-get install -qq --no-install-recommends ${deps}; \
    fi

# Create hatch config file
RUN printf "[build-system]\nrequires = ['hatchling', 'hatch-odoo']\nbuild-backend = 'hatchling.build'\n\n[project]\nname = 'extra-addons'\nversion = '1.0'\ndynamic = ['dependencies']\n\n[tool.hatch.metadata.hooks.odoo-addons-dependencies]\n\n[tool.hatch.build.hooks.odoo-addons-dirs]\n\n[tool.hatch-odoo]\nodoo_version_override = '18.0'\ndependencies = ['click-odoo-contrib']\naddons_dirs = ['.']\n" > $ADDONS_DIR/pyproject.toml

# This PEP 503 index uses odoo addons from OCA and redirects the rest to PyPI,
# in effect hiding all non-OCA Odoo addons that are on PyPI.
ENV PIP_INDEX_URL=https://wheelhouse.odoo-community.org/oca-simple-and-pypi

# Install extra addons
RUN cd $ADDONS_DIR && pip install -e .

# Set default user when running the container
USER odoo